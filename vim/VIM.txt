插件管理：
        1：新建文件夹
            ~/.vim/bundle
        2:再bundle目录下git下载插件管理器
            git clone https://github.com/tpope/vim-pathogen
        3：再bundle下个括号补全插件
            git clone https://github.com/Raimondi/delimitMate
        4:再.vimrc文件中指定插件管理器。
            runtime bundle/vim-pathogen/autoload/pathogen.vim
            execute pathogen#infect()


模式：
    normal(正常模式):
        0：常用语法
            num + 动作：对下面几行做同样的操作  //这里的动作，也包括光标的移动
                ex:  
                    num + d +d : 删除下面的num行  //这个时候是 num + dd ;与下面的不一样
                       3a!+esc :在末尾追加3个！！！  //记得要esc不然只有一个 
            动作 + 范围：对范围内做同样的操作
                ex：
                    d + g+ g : 往上面删除全部   //这个时候是d + 范围  ; 与上面的不一样
                    d + $    ：从当前光标处删除到末尾。
                    d + 2+ e : 向后删除两个单词。
                    df>       ：从当前位置删除到 >，包括>
                    diw   :  删除光标上的单词 (不包括空白字符)
                    dw    :  从当前位置删除到下一个单词开头
                    db    :  从当前位置删除到前一个单词的开头
        1：怎么进入
            按esc进入
        2：常用命令
            1：移动光标
                h  : 左
                j  : 下
                k  : 上
                l  : 右
                w  : 移动到下个单词的首字母
                W  ： 与w相同，只是不会被特殊字符分割。
                b  : 移动到上个单词的首字母，但是会被特殊字符分割,",.;:'"/`~"等
                B  ：移动到上个单词的首字母，不会被特殊字符分割，只会被空白符分割。
                e  : 移动到下个单词的最后一个字母
                E  ：
                ge : 移动到上个单词的最后一个字母
                gE ：
               g+g : 光标移动到文本最前面
                 G : 移动到文本最下面
                 _ : 光标跑到当前行最前面，还是在normal模式
                 — ： 光标跑到上一行最前面    -- 觉得没用。
                 $ : 光标跑到当前行最后面，还是在normal模式
                 ^ ： 命令把光标移动到一行的第一个非空字符
                 0 ： 命令则移到一行的第一个字符
                 % ： 从一个括号跳到对应的左右括号下，如果没有在当前口号处，就找当前行最近的一个括号。
                 f + 任意字符 ：找当前行指定的字符  ";" 找下一个指定字符  ，向右查找
                                           "," 与 ";"相反
                        ex :
                            d + f + (   //删除光标到指定字符  包括指定字符
                            d+ t + (    //删除光标到指定字符  不包括指定字符
                 F : 则是向左查找

                 t + 任意字符 ：移动到指定字符的前面的一个字符。与f相反  --- 没用
                 '' : 回到上一次的位置，当你用 "G" 命令跳到另一个地方，
                      Vim 会记住你从什么地方跳过去的。这个位置成为一
                       个标记，要回到原来的地方，''就可以了
            `{mark} ：回到指定标记的地方
                     Vim 允许你在文本中放置自定义的标记。命令 "ma" 用 a 标记当前的光标位置。你可以
                     在文本中使用 26 个标记 (a 到 z)。这些标记是不可见的，只是一个由 Vim 记住的位置。
                    ex：
                        `a  //回到a标记的地方
            2：动作
                d:删除
                    ex: 
                                                  d+d : 删除当前行,在剪切板里面有删除的东西       //注释 d是一个动作 后面接一个范围
                                           num + d +d : 删除下面的num行
                                             d + g+ g : 往上面删除全部  
                                               d + w  : 从当前光标向后删除单词的末尾
                         d+ i + 所有括号||引号||反引号  : 删除里面的所有内容， 不删除括号引号等
                         d+ a + 所有括号||引号||反引号  : 删除里面的所有内容 ，包括括号引号等
                                         d + 一个范围  ： ------------- 
                c:删除
                    d与c一样的性质，区别是d做完一个动作和还在normal模式下，c则是进入insert模式下。
                s:删除，删除后并进入插入模式

                r（replace）:替换，替换后还是在normal模式下
                R : 进入replace 模式 就是一直修改     ------用的少
                = : 格式化 也是一个动作。
                == ：格式话当前行
                y : 复制 一个动作。
                yy: 复制当前行
                p ：粘贴
                    ex:
                        num+ p :粘贴多少次插入在下一行
                        num+ P :粘贴多少次插入在上一行 
            3:切换其他模式
                a  : 在当前光标后面，进入insert模式
                i  : 在当前光标的前面，进入insert,
                A  :  移动到本行最后面并进入inert模式
                I  :  移动到本行最前面并进入inert模式
                o  :   在下一行插入空白行并在空白行进入插入模式
                O  :  在上一行插入空白行并在空白行进入插入模式
             ctrl+v：进入visual block, 以光标为一个点选一个矩阵
                  
            4：其他
                 u :  撤销，后退
            ctrl+r : 前进
                *  ： 高亮光标所在的单词,并跑到下一个高亮单词处，按n就是往下寻找 next,大N则相反
                #  :  高亮光标所在的单词,并跑到上一个高亮单词处，按n就是往上寻找 next,大N则相反  --与*号相反
                .  ： 重复上一次的操作
                x  ： 删除光标前面的字母
                 > : 向右缩进
                 < : 向左缩进
              
             大J : 将两行合并为一行
                 ex： 在一行按J，这样下面的一行就上来了合并为一行了。

            shift+ 大Z + 大Z : 保存并退出。

    insert(插入模式):
        1：怎么进入
            先esc进入normal模式，在按i（insert）,I,a（append）,A,o（open）,O,cc（change）,s（substitute替换）
        2：常用快捷键
            ctrl + w : 删除一个单词
            ctrl + n : 补全
            ctrl + P : 补全
    visual(视觉模式):
        1：怎么进入
            先esc进入normal模式，在v就可以进入 
        2:作用 
            进入视觉模式后选一个范围，之后在进行一个动作，从定位光标出到移动光标处全选
        3：常用命令
            G ：从当前光标处选中到最下面一行处。
            s : 删除当前行并进入插入模式。

        ex: 
          normal 模式下  g+g+v+G    //全选
          
    visual block(块模式):
          1：怎么进入
             先esc进入normal模式，在ctrl+v就可以进入
          2:作用
              进入矩阵的选取，还有多光标的效果
              ex： 在块模式下选择范围后按大I+想加入的字符，再esc + 任意键就可以再光标的前面加入你想加入的字符
    visual line(行模式):
          1:怎么进入
            先esc进入normal模式，在大V就可以进入
          2:作用
            每行每行的选取
    last line mode (末行模式):
         1:怎么进入?
            先esc进入normal模式，在shift+:就可以进入
         2:常用命令
                        w  :保存
                        q  :退出，入没有保存就会提示，要保存
                        wq :保存并退出 
                        q! :不保存强制退出，不会提示
                     :marks: 命令取得所有的标记的列表:
                                你会注意到有一些特殊的标记，包括:
                                '       跳转前的光标位置
                                "       最后编辑的光标位置
                                [       最后修改的开始位置
                                ]       最后修改的结束位置
                :set number ： 这会在每行的前面加上一个行号
              :set nonumber  ：取消行号
            ： s/替换的单词/替换的内容/  : 替换当前行第一个
                s/替换的单词/替换的内容/g  :替换整行的所有匹配的单词
                范围+s/替换的单词/替换的内容/  : 替换范围内的第一个匹配字符
                    ex：3，4s/hello/cd/g    替换34行的hello为cd
                        %s/hello/cd/g      替换全部文档
                visual模式下选中范围，按“:” 在敲 s/被替换的字符/替换的字符/g

            2，5 co num:将2345行copy到指定num行的下面，%代表全局

    search (查找模式) ：
        1：怎么进入
            先esc进入normal模式，在按/就可以了。
        2：支持正则
            ex:
                "\>" 是一个特殊的记号，表示只匹配单词末尾。类似地，"\<" 只匹配单词的开头。
                     /the\>  : 查找以the结尾的单词 
                    /\<the\> ：查找单词the

                $  ：字符匹配行尾。所以，"was$" 仅匹配在行尾的单词 was。
                ^  ：字符匹配行首
                     "/^the$"，它会匹配仅包括 "the" 的行。并且不包括空格。
               .  ： 字符匹配任何字符。例如，模式 "c.m" 匹配一个字符串，它的第一个字符是 c，
                     第二个字符是任意字符，而第三个字符是 m
                
